[model]
type = "DetectorWrapper"
    [model.detection]
    type = "D2GeneralizedRCNN"
    model_base = "faster-rcnn/r50-fpn"
    num_classes = 10

[solver]
images_per_gpu = 1
lr_policy = "WarmupMultiStepLR"
base_lr = 0.02
max_iters = 1
steps = [100]
checkpoint_period = 100
log_period = 10
eval_period = 100
eval_metrics = ['detect']

[[train]]
name = "bdd100k_det_sample_train"
type = "scalabel"
annotations = "openmt/engine/testcases/detect/bdd100k-samples/annotation.json"
data_root = "openmt/engine/testcases/detect/bdd100k-samples/images"
ignore = ["other person", "other vehicle", "trailer"]
name_mapping = {"bike" = "bicycle", "caravan" = "car", "motor" = "motorcycle", "person" = "pedestrian", "van" = "car"}

[[test]]
name = "bdd100k_det_sample_val"
type = "scalabel"
annotations = "openmt/engine/testcases/detect/bdd100k-samples/annotation.json"
data_root = "openmt/engine/testcases/detect/bdd100k-samples/images"

[dataloader]
workers_per_gpu = 0
categories = ["pedestrian", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle", "traffic light", "traffic sign"]
    [dataloader.ref_sampling_cfg]
    type = 'uniform'
    scope = 1
    num_ref_imgs = 0

    [[dataloader.train_augmentations]]
    type = "Resize"
    kwargs = {"shape" = [720, 1280]}

    [[dataloader.train_augmentations]]
    type = "RandomFlip"
    kwargs = {"prob" = 0.5}

    [[dataloader.train_augmentations]]
    type = "BrightnessJitterAugmentation"
    kwargs = {}

    [[dataloader.test_augmentations]]
    type = "Resize"
    kwargs = {"shape" = [720, 1280]}


[launch]
weights = "detectron2"