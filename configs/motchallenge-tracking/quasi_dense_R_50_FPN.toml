[model]
type = "QDGeneralizedRCNN"
keyframe_selection = "first"
    [model.detection]
    type = "D2GeneralizedRCNN"
    model_base = "faster-rcnn/r50-fpn"
    num_classes = 1

    [model.track_graph]
    type = "QDTrackGraph"
    keep_in_memory = 10  # timesteps

    [[model.losses]]
    type = "MultiPosCrossEntropyLoss"
    loss_weight = 0.25

    [[model.losses]]
    type = "EmbeddingDistanceLoss"
    loss_weight = 1.0

    [model.similarity]
    type = "QDSimilarityHead"
    num_classes = 0
    in_dim = 256
    num_convs = 4
    conv_out_dim = 256
    num_fcs = 1
    fc_out_dim = 1024
    embedding_dim = 256
    norm = "GN"
    proposal_append_gt = true

        [model.similarity.proposal_pooler]
        type = "D2RoIPooler"
        pooling_op = "ROIAlignV2"
        resolution = [7, 7]
        strides = [4, 8, 16, 32]
        sampling_ratio = 0

        [model.similarity.proposal_sampler]
        type = "CombinedSampler"
        batch_size_per_image = 256
        positive_fraction = 0.5
        pos_strategy = "instance_balanced"
        neg_strategy = "iou_balanced"

        [model.similarity.proposal_matcher]
        type = "MaxIoUMatcher"
        thresholds = [0.3, 0.7]
        labels = [0, -1, 1]
        allow_low_quality_matches = false

[solver]
images_per_gpu = 1
lr_policy = "WarmupMultiStepLR"
base_lr = 0.02
steps = [1000, 2000]
max_iters = 10000
checkpoint_period = 2000
log_period = 10
eval_period = 50
eval_metrics = ['track']

[[train]]
name = "motchallenge_sample_train"
type = "motchallenge"
annotations = "data/MOT16"
data_root = "data/MOT16"

[[test]]
name = "motchallenge_sample_val"
type = "motchallenge"
annotations = "data/MOT16"
data_root = "data/MOT16"

[dataloader]
workers_per_gpu = 0
categories = ["pedestrian"]
remove_samples_without_labels = true
inference_sampling = "sequence_based"
    [dataloader.data_backend]
    type = "FileBackend"
    [dataloader.ref_sampling_cfg]
    type = 'uniform'
    scope = 3
    num_ref_imgs = 1

    [[dataloader.train_augmentations]]
    type = "Resize"
    kwargs = {"shape" = [1080, 1920]}

    [[dataloader.train_augmentations]]
    type = "RandomFlip"
    kwargs = {"prob" = 0.5}

    [[dataloader.test_augmentations]]
    type = "Resize"
    kwargs = {"shape" = [1080, 1920]}

[launch]
weights = "detectron2"